{"ast":null,"code":"var _jsxFileName = \"/Users/laurendoss/Desktop/ReactApplications/interview-app/gummicubeInterview/src/App.js\";\nimport React, { useState } from 'react';\nimport { Alert, Jumbotron, Container, Button } from 'reactstrap';\n\nfunction App() {\n  const [visible, setVisible] = useState(true);\n\n  const onDismiss = () => setVisible(false);\n\n  const DisplayAlert = props => {\n    console.log(\"was clicked!\");\n    return /*#__PURE__*/React.createElement(Alert, {\n      color: \"warning\",\n      isOpen: visible,\n      toggle: onDismiss,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 5\n      }\n    }, \"I am an alert and I can be dismissed!\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    color: \"primary\",\n    isOpen: \"PropTypes.bool\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, \"This is a primary alert\"), /*#__PURE__*/React.createElement(Jumbotron, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"display-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, \"Fluid jumbotron\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, \"This is a modified jumbotron that occupies the entire horizontal space of its parent.\"))), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    outline: true,\n    color: \"primary\",\n    onClick: DisplayAlert,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, \"Click me for an alert\"));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/laurendoss/Desktop/ReactApplications/interview-app/gummicubeInterview/src/App.js"],"names":["React","useState","Alert","Jumbotron","Container","Button","App","visible","setVisible","onDismiss","DisplayAlert","props","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,EAAgBC,SAAhB,EAA2BC,SAA3B,EAAsCC,MAAtC,QAAoD,YAApD;;AAIA,SAASC,GAAT,GAAe;AAEf,QAAK,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,IAAD,CAArC;;AACA,QAAMQ,SAAS,GAAE,MAAKD,UAAU,CAAC,KAAD,CAAhC;;AAEA,QAAME,YAAY,GAAIC,KAAD,IAAU;AAC7BC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AAEA,wBAEE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAC,SAAb;AAAuB,MAAA,MAAM,EAAEN,OAA/B;AAAwC,MAAA,MAAM,EAAEE,SAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAFF;AAOE,GAVJ;;AAYE,sBAGE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAC,SAAb;AAAuB,IAAA,MAAM,EAAC,gBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,eAKE,oBAAC,SAAD;AAAW,IAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADA,eAEE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6FAFF,CADF,CALF,eAWE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,MAA7B;AAA8B,IAAA,KAAK,EAAC,SAApC;AAA8C,IAAA,OAAO,EAAEC,YAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAXF,CAHF;AAsBD;;AAED,eAAeJ,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Alert, Jumbotron, Container, Button } from 'reactstrap'\n\n\n\nfunction App() {\n  \nconst[visible, setVisible] = useState(true); \nconst onDismiss =()=> setVisible(false)\n\nconst DisplayAlert = (props) =>{\n  console.log(\"was clicked!\")\n  \n  return (\n    \n    <Alert color=\"warning\" isOpen={visible} toggle={onDismiss}>\n      I am an alert and I can be dismissed!\n    </Alert>\n\n      \n  )}\n\n  return (\n\n    \n    <div className=\"App\">\n      <Alert color=\"primary\" isOpen=\"PropTypes.bool\">\n        This is a primary alert\n      </Alert>\n\n      <Jumbotron fluid>\n        <Container fluid>\n        <h1 className=\"display-3\">Fluid jumbotron</h1>\n          <p className=\"lead\">This is a modified jumbotron that occupies the entire horizontal space of its parent.</p>\n          </Container>\n      </Jumbotron>\n      <Button type=\"submit\" outline color=\"primary\" onClick={DisplayAlert}>\n      Click me for an alert\n      </Button>\n\n    \n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}